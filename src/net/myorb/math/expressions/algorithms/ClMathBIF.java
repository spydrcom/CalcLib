
package net.myorb.math.expressions.algorithms;

import net.myorb.math.expressions.ValueManager;

/**
 * built-in functions available for CalcLib MATH library objects
 * @author Michael Druckman
 */
public class ClMathBIF
{


	/*
	 * 		FieldAccess
	 * 
	 * 		specifically intended for library implementations
	 * 		function GET allows structured data generated by 
	 * 		libraries to be interrogated for component data:
	 * 
	 * 		GenericValue GET (String FieldName, ClMathBIF.FieldAccess Structure)
	 * 
	 * 		ClMathBIF class exports FieldAccess interface which must
	 *		be implemented by the structure in order to export its
	 *		components as values understood by CalcLib
	 *
	 *		components can be discrete, array, matrix, or structure
	 *
	 */


	/**
	 * the interface for implementation by structured data.
	 * the implementer must use the specified identifier to
	 * to recognize the requested component or
	 * throw exception in case of failure
	 */
	public interface FieldAccess
	{
		/**
		 * interrogate a structure
		 *  and return the field identified
		 * @param identifier the textual identification of a component
		 * @return the generically wrapped field data found
		 * @throws RuntimeException for field not found
		 */
		ValueManager.GenericValue getFieldNamed (String identifier) throws RuntimeException;
	}


	/**
	 * interrogate a structure
	 * 			and return a component
	 * @param fieldNamed textual identification
	 * 			specific to the field being sought
	 * @param structure access to a data structure
	 * 			typically provided by a library implementation
	 * @return the generically wrapped field data found
	 * @throws RuntimeException for access unavailable
	 */
	public static ValueManager.GenericValue getField
		(String fieldNamed, Object structure)
			throws RuntimeException
	{
		if (structure instanceof FieldAccess)
		{
			FieldAccess access = (FieldAccess) structure;
			return access.getFieldNamed (fieldNamed);
		}
		throw new RuntimeException ("Structure does not offer field access");
	}


}

